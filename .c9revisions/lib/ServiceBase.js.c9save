{"ts":1352769293418,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"module.exports = function(app, options) {\n\n    options = options || {};\n\n    var resource = this.resource;\n    var name = this.name;\n    var plural = name + 's';\n    var store = this.store;\n    var name_id = name + '_id';\n\n    function get(req, res, next) {\n        var query = (function() {\n            if (req.params[name_id]) {\n                return {\n                    _id: req.params[name_id]\n                }\n            }\n            if (req.query) {\n                return req.query;\n            }\n            return null;\n        })();\n\n        // Find by Id\n        if (query) {\n            if (query._id) {\n                store.findById(query._id, function(err, r) {\n                    if(r) {\n                        req[name] = r.toObject();\n                        req[plural] = [r.toObject()];\n                        next();\n                    } else {\n                        res.send(404)\n                    }\n                });\n            }\n            else {\n                store.find(query, function(err, records) {\n                    req[plural] = records;\n                    next();\n                });\n            }\n        }\n    }\n\n    function post(req, res, next) {\n        var data = req.body;\n    \tvar model = new store(data);\n\t\tmodel.save(function(err, r) {\n\t\t\tif (err) {\n\t\t\t\tres.send(500);\n\t\t\t}\n\t\t\treq[name] = r.toObject();\n\t\t\tnext();\n\t\t});\n    }\n\n    function put(req, res, next) {\n        var data = req.body;\n    \tvar id = req.params[name_id];\n\n\t\tstore.findById(id, function(err, r) {\n\t\t\tfor(f in data) {\n\t\t\t\tr.set(f, data[f]);\n\t\t\t}\n\t\t\tr.save(next);\n\t\t});\n    }\n\n    function del(req, res, next) {\n        var id = req.params[name_id];\n        store.findByIdAndRemove(id, function(err, r) {\n            next();\n        });\n    }\n\n    var filters = {\n        'get': [get],\n        'post': [post],\n        'put': [put],\n        'del': [del]\n    };\n    \n    // Add beforePost hook\n    if (typeof this.beforePost == 'function') {\n        filters.post.unshift(this.beforePost)\n    }\n    \n    app.get(resource, get, function(req, res) {\n        res.send(req[plural]); \n    });\n\n    app.get(resource + '/:mapping_id', get, function(req, res) {\n        res.send(req[name]);\n    });\n\n    app.post.apply(app, [resource].concat(filters.post).concat(function(req, res) {\n        res.send(req[name]);\n    }));\n\n    app.post(resource + '/:mapping_id', put, function(req, res) {\n        res.send({ok: 1});\n    });\n\n    app.put(resource + '/:mapping_id', put, function(req, res) {\n        res.send({ok: 1});\n    });\n\n    app.del(resource + '/:mapping_id', del, function(req, res) {\n        res.send({ok: 1});\n    });\n}"]],"start1":0,"start2":0,"length1":0,"length2":2649}]],"length":2649}
{"contributors":[],"silentsave":false,"ts":1352804900047,"patch":[[{"diffs":[[0,"source + '/:"],[-1,"mapping"],[1,"shop"],[0,"_id', get, f"]],"start1":2133,"start2":2133,"length1":31,"length2":28},{"diffs":[[0,"t(resource + '/:"],[-1,"mapping"],[1,"shop"],[0,"_id', put, funct"]],"start1":2353,"start2":2353,"length1":39,"length2":36},{"diffs":[[0,"source + '/:"],[-1,"mapping"],[1,"shop"],[0,"_id', put, f"]],"start1":2455,"start2":2455,"length1":31,"length2":28},{"diffs":[[0," '/:"],[-1,"mapping"],[1,"shop"],[0,"_id'"]],"start1":2561,"start2":2561,"length1":15,"length2":12}]],"length":2637,"saved":false}
