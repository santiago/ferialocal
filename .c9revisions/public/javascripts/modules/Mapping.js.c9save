{"ts":1352769967619,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n *  @module Mapping\n *  @exports function\n *\n */\ndefine(function() {\nreturn function(app) {\n    var Map = app.Map;\n    \n    /*  @Model Mapping\n     *\n     */\n    var Mapping = Backbone.Model.extend({\n        idAttribute: '_id',\n        urlRoot: '/mappings'\n    });\n\n    /*  @Model Point\n     *\n     */\n    var Point = Backbone.Model.extend({\n        idAttribute: '_id'\n    });\n\n    /*  @Collection MappingList\n     *\n     */\n    var MappingList = Backbone.Collection.extend({\n        model: Mapping,\n        url: '/mappings'\n    });\n    \n\n    /*  @Collection PointList\n     *\n     */\n    var PointList = Backbone.Collection.extend({\n        model: Point\n    });\n\n\n    /*  @View MyMappingsView\n     *\n     */\n    var el = $('#mis-mapas').get();\n    var MyMappingsView = Backbone.View.extend({\n        el: el,\n\n        events: {\n            \"click button#addmap\": \"openNewMap\",\n            \"keypress input\": \"captureKey\",\n            \"click #newmap .close\": \"closeNewMap\",\n            \"click button#savemap\": \"createMapping\"\n        },\n\n        initialize: function() {\n            var view = this;\n            this.render();\n            $(window).on('keydown', function(e) {\n                if (e.keyCode == 27) {\n                    view.closeNewMap();\n                }\n            });\n\n            this.collection.on('sync', function(e, f) {\n                view.render();\n                view.closeNewMap();\n                location.hash = \"#mapping/\"+e.id;\n            });\n        },\n\n        render: function() {\n            this.collection.fetch({\n                data: {\n                    user_id: this.user_id\n                },\n                success: function(coll, data) {\n                    $('ul.mappings').empty();\n                    data.forEach(function(item) {\n                        item.id = item._id;\n                        dust.render('mapping_item', item, function(err, html) {\n                            $('ul.mappings').append(html);\n                        });\n                    });\n                }\n            });\n        },\n\n        openNewMap: function() {\n            $('#newmap').slideDown('fast', function() {\n                // $('#newmap .close').show()\n            });\n            $('.overlay').fadeIn('fast');\n            $('#newmap input').focus();\n            $('button#addmap').fadeOut('fast');\n        },\n\n        closeNewMap: function() {\n            $('#newmap').slideUp('fast', function() {\n                // $('#newmap .close').hide()\n            });\n            $('.overlay').fadeOut('fast');\n            $('button#addmap').fadeIn('fast');\n        },\n\n        createMapping: function() {\n            var title = $.trim($('#newmap input').val());\n            if (!title) {\n                return false\n            }\n            this.collection.create({\n                title: title\n            });\n        },\n\n        captureKey: function(e) {\n            switch (e.keyCode) {\n            case 13:\n                this.createMapping();\n                break;\n            default:\n                break;\n            }\n        }\n    });\n\n    var View = new MyMappingsView({\n        collection: new MappingList\n    });\n\n    /*  @View MappingView\n     *\n     */\n    var MappingView = new (Backbone.View.extend({        \n        initialize: function() {\n            var view = this;\n            \n            this.points = new PointList;\n            this.points.on('sync', function(e) {\n                this.closeNewPoint();\n                this.refresh(onRefresh);\n                function onRefresh() {\n                    $('.rslide-card.mapping').addClass('active')\n                }\n            }.bind(this));\n        },\n\n        events: {\n            \"click button#addpoint\": \"openNewPoint\",\n            \"click #newpoint .close\": \"closeNewPoint\",\n            \"click #newpoint #mappoint\": \"startPointing\",\n            \"click #newpoint #savepoint\": \"savePoint\",\n            \"click button#editmap\": \"showEdit\",\n            \"click button#savemap\": \"updateMap\",\n            \"click button#deletemap\": \"deleteMap\"\n        },\n        \n        setMapping: function(model, data) {\n            this.id = model.id;\n            this.model = model;\n            this.points.url = '/mappings/'+this.id+'/points';\n            app.setMappingName(this.model.get('title'));\n        },\n        \n        getMappingById: function(id, callback) {\n            var view = this;\n            var mapping = new Mapping({ _id: id });\n            mapping.fetch({\n                success: function(model, data) {\n                    view.setMapping(model, data)\n                    callback(model);\n                }\n            });\n        },\n        \n        load: function(id) {       \n            this.getMappingById(id, function() {\n                this.render();\n                app.CardSlider.show('mapping');\n            }.bind(this))\n        },\n        \n        render: function() {\n            var view = this;\n            \n            this.__lastPoint = null;\n            this._newPointMarker = null;\n\n            var mapping = this.model.toJSON();\n            $('.rslide-card.mapping').remove();\n            dust.render('mapping', mapping, function(err, html) {\n                $('.rslide-card:last').after(html);                \n                view.setElement($('.rslide-card.mapping').get());\n            });\n            this.renderPoints();\n        },\n        \n        renderPoints: function() {\n            var view = this;\n\n            // Clear current state\n            this.$el.find('ul.points li').remove();\n            Map.clearPoints();\n\n            // Render Points\n            var mapping = this.model.toJSON();\n            mapping.points.forEach(function(point) {\n                view.renderPointLabel(point);\n                dust.render('point_item', point, function(err, html) {\n                    var $li = $('<li/>');\n                    $li.html(html);\n                    view.$el.find('ul.points').append($li);\n                });\n            });\n        },\n        \n        renderPointLabel: function(data) {\n            var point = new OpenLayers.LonLat(data.loc[1], data.loc[0]);\n            point.transform(\n                new OpenLayers.Projection(\"EPSG:4326\"),\n                new OpenLayers.Projection(\"EPSG:900913\")\n            );\n            Map.addMarker(point);\n        \n            // Position label\n            var popupPoint = new OpenLayers.LonLat(point.lon + 10, point.lat + 40);\n            this.popup(popupPoint, data._id, data.title);\n        },\n        \n        refresh: function(callback) {\n            var view = this;\n            this.model.fetch({\n                success: function() {\n                    view.render();\n                    callback(view.model);\n                }\n            });\n        },\n        \n        showEdit: function() {\n        },\n        \n        updateMap: function() {\n            var title = $.trim($('[name=title]').val());\n            var description = $.trim($('[name=description]').val());\n            var tags = $.trim($('[name=tags]').val());\n            \n            if(title) {\n                this.model.set('title', $('[name=title]'));\n                this.model.set('description');\n                this.model.set('tags');\n                \n                this.model.save();\n            }\n        },\n        \n        deleteMap: function() {\n            if (confirm('¿Está seguro que desea borrar este mapa?')) {\n                this.model.destroy();\n                location.href = '#mappings'\n            }\n        },\n        \n        /* Display dialog for adding a new Point\n         * to this Mapping\n         *\n         */\n        openNewPoint: function() {\n            $('#newpoint').slideDown();\n            $('button#addpoint').fadeOut('fast');\n        },\n        \n        closeNewPoint: function() {\n            $('#newpoint').slideUp(go.bind(this));\n            $('#newpoint').find('input, textarea').val('');\n            $('button#addpoint').fadeIn('fast');\n            function go() {\n                this.$el.find('#newpoint .info.pointing').find('.one, .two').show();\n                this.$el.find('#newpoint #mappoint').show();\n                this.$el.find('#newpoint .info.pointing').find('.three').hide();\n                this.$el.find('#newpoint .info.pointing').hide();\n                this.$el.find('#newpoint #savepoint').hide();  \n            }\n        },\n        \n        startPointing: function() {\n            var view = this;\n            this.$el.find('#newpoint #mappoint').fadeOut(function() {\n                view.$el.find('#newpoint .info.pointing').fadeIn();\n            });\n            Map.startPointing();\n            Map.map.events.register('click', this, this.__onClickMap);\n        },\n        \n        stopPointing: function() {\n            this.$el.find('#newpoint .info.pointing').find('.one, .two').hide();\n            this.$el.find('#newpoint .info.pointing').find('.three').show();\n            this.$el.find('#newpoint #savepoint').fadeIn();\n            Map.map.events.unregister('click', this, this.__onClickMap);\n            this._newPointMarker.events.register('click', this, this.__onClickNewPointMarker);\n        },\n\n        savePoint: function() {\n            PointForm.setElement(this.$el.find('#newpoint'));\n            var data = PointForm.getValidData();\n            if(data) {\n                data.mapping_id = this.id;\n                this.points.create(data);\n                this._newPointMarker.events.unregister('click', this, this.__onClickNewPointMarker);\n                Map.map.events.unregister('click', this, this.__onClickMap);\n                \n                // Place definite marker\n                Map.addMarker(this.__lastPoint);\n                this._newPointMarker = null;\n            }\n        },\n\n        popup: function(point, id, text) {\n            var popup = new OpenLayers.Popup('pointlabel-'+id, // Label\n                point, // Point\n                new OpenLayers.Size(text.length * 8, 15), // Size\n                text, // Text\n                true\n            );\n            \n            Map.map.addPopup(popup);\n            \n             // Style label\n            var $nodeLabel = $(\"#pointlabel-\" + id);\n            $nodeLabel.addClass(\"pointlabel\");\n            $nodeLabel.css({\n                border: \"2px solid #666\"\n            });\n            $nodeLabel.find('#pointlabel-' + id + '_close').remove();\n\n            // on mouse over label\n            $nodeLabel.on('mouseover', function(e) {\n            $nodeLabel.addClass('hover');\n            $nodeLabel.css({\n                border: \"2px solid blue\"\n                });\n            });\n\n            // on mouse out label\n            $nodeLabel.on('mouseout', function(e) {\n               $nodeLabel.removeClass('hover');\n                $nodeLabel.css({\n                    border: \"2px solid #666\"\n                });\n            });\n        },\n\n        __onClickNewPointMarker: function(e) {\n            this._newPointMarker.events.unregister('click', this, this.__onClickNewPointMarker);\n            Map.map.events.unregister('click', this, this.__onClickMap);\n            this.startPointing();\n        },\n        \n        __onClickMap: function(e) {\n            // Get Point from Event\n            var point = Map.map.getLonLatFromViewPortPx(e.xy);\n            this.__lastPoint = point.clone();\n            \n            this._newPointMarker = Map.getMarker(point);\n\n            point.transform(\n                new OpenLayers.Projection(\"EPSG:900913\"),\n                new OpenLayers.Projection(\"EPSG:4326\")\n            );\n            this.$el.find('#newpoint input[name=lat]').val(point.lat);\n            this.$el.find('#newpoint input[name=lon]').val(point.lon);\n\n            this.stopPointing();\n        }\n    }));\n    \n    var MediaGallery = new (Backbone.View.extend({\n        initialize: function() {\n            var view = this;\n            dust.render('media_gallery', {}, function(err, html) {\n                $('.root-wrapper').append(html)\n                go();\n            });\n            \n            function go() {\n                Galleria.loadTheme('/javascripts/thirdparty/galleria/themes/classic/galleria.classic.min.js');\n                Galleria.ready(function() {\n                    $('#galleria-wrapper').overlay({\n                        fixed: false,\n                        top: 32\n                    });\n                    view.galleria = Galleria.get(0);\n                });\n                Galleria.run('#galleria', { dataSource: [{image:'/images/ajax_loader_big.gif'}] });\n            }\n        },\n        \n        load: function(data) {\n            $('#galleria-wrapper').fadeIn(function() {\n                this.galleria.load(data);\n            }.bind(this))\n        }\n    }));\n    \n    var PointView = new (Backbone.View.extend({\n        events: {\n            'click #addphoto': 'addPhoto'\n        },\n\n        initialize: function() {\n        },\n        \n        getPointById: function(mapping_id, point_id, callback) {\n            var view = this;\n            \n            this.mapping_id = mapping_id;\n            this.point_id = point_id;\n            \n            MappingView.getMappingById(mapping_id, function(mapping) {\n                view.point = _.find(mapping.get('points'), function(p) {\n                    return p._id == point_id\n                });\n                MappingView.renderPoints();\n                view.render(callback);\n            });\n        },\n        \n        render: function(callback) {\n            var view = this;\n\n            dust.render('point', this.point, function(err, html) {\n                // Remove existing data\n                $('.rslide-card.point').remove();\n                \n                $('.rslide-card:last').after(html);\n                view.setElement($('.rslide-card.point').get());\n                \n                // Setup photo upload\n                view.photoUpload();\n                \n                // Hide file input\n                var wrapper = $('<div/>').css({height:0,width:0,'overflow':'hidden'});\n                var fileInput = $(':file').wrap(wrapper);\n                fileInput.change(function(){\n                    var $this = $(this);\n                    $('#file').text($this.val());\n                });\n                // Tell the world you've finished rendering\n                if(typeof callback == 'function') callback();\n            });\n            \n            if (this.point.image.length === 0) {\n                this.$el.find('.media-image a.show').remove();\n            }\n            \n            this.mediaGallery();\n        },\n        \n        addPhoto: function() {\n            $('.media-image :file').click();\n        },\n        \n        photoUpload: function() {\n            var view = this;\n            \n            this.$el.find('.image-upload .control a').click(function(e) {\n                e.preventDefault();\n                $(this).blur();\n                \n                if ($(this).hasClass('cancel')) {\n                    view.cancelUpload();\n                }\n                if ($(this).hasClass('skip')) {\n                    view.skipCurrentUpload();\n                }\n            });\n            \n            $(\"#upload\").html5_upload({\n                url: '/mappings/'+this.mapping_id+'/points/'+this.point_id+'/image',\n                sendBoundary: window.FormData || $.browser.mozilla,\n                onStart: function(event, total) {\n                    // view.__progress = 0;\n                    //$('.meter > span').width(0);\n                    //$('.meter > span').removeClass('stop')\n                    \n                    var check = confirm(\"Está subiendo un total de \" + total + \" imágenes. ¿Desea continuar?\");\n                    if (check) {\n                        $('.image-upload').find('.control p span.index').text(' 1');\n                        $('.image-upload').find('.control p span.total').text(total);\n                        $('#addphoto').fadeOut(function() {\n                            $('.image-upload').slideDown();\n                        });\n                    }\n                    return check;\n                },\n                onStartOne: function(event, name, number, total) {\n                    view.__progress = 0;\n                    view.__uploading = true;\n                    $('.meter > span').removeClass('stop');\n                    $('.image-upload').find('.control p span.index').text(' ' + (number + 1));\n                    view.startProgressBar();\n                    return true;\n                },\n                onProgress: function(event, progress, name, number, total) {\n                    view.__progress = parseFloat((progress*100).toString().slice(0,5));\n                },\n                onFinish: function(event, response, name, number, total) {\n                    $('#addphoto').fadeIn();\n                    $('.image-upload').slideUp(function() {\n                        view.refresh()\n                    });\n                    view.__uploading = false;\n                },\n                onError: function(event, name, error) {\n                    alert('error while uploading file ' + name);\n                }\n            })\n        },\n        \n        refresh: function() {\n            var view = this;\n            MappingView.refresh(function(mapping) {\n                view.point = _.find(mapping.get('points'), function(p) {\n                    return p._id == view.point_id\n                });\n\n                view.render();\n                view.show();\n            });\n        },\n        \n        show: function() {\n            this.$el.addClass('active');\n        },\n        \n        cancelUpload: function() {\n            var view = this;\n\n            $('.media-image #upload:first').triggerHandler('html5_upload.cancelAll');\n            $('.image-upload')\n                .find('.meter > span').addClass('stop')\n                  .end()\n                .find('.control').hide()\n                  .end()\n                .find('.cancel-info').show()\n                \n            setTimeout(function() {\n                view.closeImageUpload();\n            }, 1500);\n        },\n        \n        showImageUpload: function() {\n            $('.image-upload').slideDown();\n            $('#addphoto').fadeOut();\n        },\n        \n        closeImageUpload: function() {\n            $('.image-upload').slideUp(function() {\n                $(this)\n                    .find('.meter > span').removeClass('stop')\n                        .end()\n                    .find('.control').show()\n                        .end()\n                    .find('.cancel-info').hide()\n                    \n                $('#addphoto').fadeIn();\n            });\n        },\n        \n        skipCurrentUpload: function() {\n            var view = this;\n            $('.image-upload')\n                .find('.meter > span').addClass('stop')\n            this.__uploading = false;\n            setTimeout(function() {\n                var current = $.trim($('.image-upload .control .index').text());\n                var total = $.trim($('.image-upload .control .total').text());\n                if (current === total)\n                    view.cancelUpload()\n                else\n                    $('.media-image #upload:first').triggerHandler('html5_upload.cancelOne')\n            }, 101);\n        },\n        \n        startProgressBar: function() {\n            $('.meter > span').width(0);\n            $('.meter > span').removeClass('stop')\n\n            var view = this;\n            function go() {\n                var w = view.__progress + '%';\n                if (/*view.__progress == 100 || */!view.__uploading) { return }\n                $(\".meter > span\").animate({\n                    width: w\n                }, 100, go);\n            }\n            go()\n        },\n        \n        mediaGallery: function() {\n            // $('#galleria').empty();\n            // MediaGallery.load([{ image: '/images/ajax_loader_big.gif' }]);\n            var GalleriaData = this.point.image.map(function(img) {\n                return {\n                    thumb: 'https://s3.amazonaws.com/ow-mapping/200-'+img,\n                    image: 'https://s3.amazonaws.com/ow-mapping/'+img\n                }\n            });\n\n            // Links for launching Media Gallery\n            this.$el.find('#media a.show').click(function(e) {\n                e.preventDefault();\n                $(this).blur()\n                \n                if ($(this).closest('li').hasClass('media-image')) {\n                    $('#galleria-wrapper').css({'z-index':1});\n                    MediaGallery.load(GalleriaData);\n                    if(!$('#galleria-wrapper').overlay().isOpened()) {\n                        $('#galleria-wrapper').overlay().load();\n                    }\n                }\n                \n            });\n        }\n    }));\n    \n    // Backbone Router for Mappings\n    var MappingRouter = Backbone.Router.extend({\n        routes: {\n            \"mapping/:id\": \"getMappingById\",\n            \"mappings/:mapping_id/points/:point_id\": \"getPointById\",\n            \"mappings\": \"getMyMappings\"\n        },\n        getMappingById: function(id) {\n            MappingView.load(id);\n        },\n        getMyMappings: function() {\n            app.CardSlider.show('mis-mapas');\n        },\n        getPointById: function(mapping_id, point_id) {\n            PointView.getPointById(mapping_id, point_id, function() {\n                app.CardSlider.show('point');\n            })\n        }\n    });\n    new MappingRouter();\n\n    \n    // Detect Geolocation\n    function success(pos) {\n        var position = [pos.coords.latitude, pos.coords.longitude];\n        var point = new OpenLayers.LonLat(position[1], position[0]).transform(new OpenLayers.Projection(\"EPSG:4326\"), Map.map.getProjectionObject());\n        Map.map.setCenter(point, 16);\n    }\n\n    function error() {}\n\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(success, error);\n    } else {\n        alert('Geolocation not supported');\n        return;\n    }\n}\n});"]],"start1":0,"start2":0,"length1":0,"length2":22111}]],"length":22111}
{"contributors":[],"silentsave":false,"ts":1352769981924,"patch":[[{"diffs":[[0,"var "],[-1,"Map = app.Map"],[1,"Offering = app.Offering"],[0,";\n  "]],"start1":99,"start2":99,"length1":21,"length2":31}]],"length":22121,"saved":false}
{"ts":1352769988257,"patch":[[{"diffs":[[0,"    var "],[-1,"Mapp"],[1,"Offer"],[0,"ing = Ba"]],"start1":171,"start2":171,"length1":20,"length2":21}]],"length":22122,"saved":false}
{"ts":1352769993315,"patch":[[{"diffs":[[0,"    var "],[-1,"Poi"],[1,"Comme"],[0,"nt = Bac"]],"start1":316,"start2":316,"length1":19,"length2":21}]],"length":22124,"saved":false}
{"ts":1352770002174,"patch":[[{"diffs":[[0,"    var "],[-1,"Mapp"],[1,"Offer"],[0,"ingList "]],"start1":441,"start2":441,"length1":20,"length2":21}]],"length":22125,"saved":false}
{"ts":1352770010745,"patch":[[{"diffs":[[0,"    var "],[-1,"Poi"],[1,"Comme"],[0,"ntList ="]],"start1":601,"start2":601,"length1":19,"length2":21}]],"length":22127,"saved":false}
{"ts":1352770014971,"patch":[[{"diffs":[[0,"lection "],[-1,"Poi"],[1,"Comme"],[0,"ntList\n "]],"start1":568,"start2":568,"length1":19,"length2":21}]],"length":22129,"saved":false}
{"ts":1352770021923,"patch":[[{"diffs":[[0,"lection "],[-1,"Mapp"],[1,"Offer"],[0,"ingList\n"]],"start1":406,"start2":406,"length1":20,"length2":21}]],"length":22130,"saved":false}
{"ts":1352770027742,"patch":[[{"diffs":[[0," @Model "],[-1,"Mapp"],[1,"Offer"],[0,"ing\n    "]],"start1":140,"start2":140,"length1":20,"length2":21},{"diffs":[[0," @Model "],[-1,"Poi"],[1,"Comme"],[0,"nt\n     "]],"start1":288,"start2":288,"length1":19,"length2":21}]],"length":22133,"saved":false}
{"ts":1352770141113,"patch":[[{"diffs":[[0,"\n               "],[1," //"],[0," Galleria.run('#"]],"start1":12505,"start2":12505,"length1":32,"length2":35}]],"length":22136,"saved":false}
{"ts":1352791398230,"patch":[[{"diffs":[[0,"ng\"\n        },\n\n"],[1,"        initialize: function() {\n        }\n    });\n\n/*  @View MyMappingsView\n     *\n     */\n    var el = $('#mis-mapas').get();\n    var MyMappingsView = Backbone.View.extend({\n        el: el,\n\n        events: {\n            \"click button#addmap\": \"openNewMap\",\n            \"keypress input\": \"captureKey\",\n            \"click #newmap .close\": \"closeNewMap\",\n            \"click button#savemap\": \"createMapping\"\n        },\n\n"],[0,"        initiali"]],"start1":1044,"start2":1044,"length1":32,"length2":451}]],"length":22555,"saved":false}
{"ts":1352791410647,"patch":[[{"diffs":[[0,"p\",\n"],[-1,"            \"keypress input\": \"captureKey\",\n            \"click #newmap .close\": \"closeNewMap\",\n            \"click button#savemap\": \"createMapping\"\n"],[0,"    "]],"start1":897,"start2":897,"length1":155,"length2":8}]],"length":22408,"saved":false}
{"ts":1352791424702,"patch":[[{"diffs":[[0,"     \"click "],[-1,"button#addmap"],[1,"a#publish"],[0,"\": \"openNewM"]],"start1":859,"start2":859,"length1":37,"length2":33}]],"length":22404,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352791514809,"patch":[[{"diffs":[[0,"#publish\": \""],[-1,"openNewMap"],[1,"publish"],[0,"\",\n        }"]],"start1":872,"start2":872,"length1":34,"length2":31}]],"length":22401,"saved":false}
{"ts":1352791597082,"patch":[[{"diffs":[[0,"var el = $('"],[-1,"#mis-mapas"],[1,"section#publish"],[0,"').get();\n  "]],"start1":737,"start2":737,"length1":34,"length2":39},{"diffs":[[0,"on() {\n        }"],[1,",\n        \n        publish: function() "],[0,"\n    });\n\n/*  @V"]],"start1":937,"start2":937,"length1":32,"length2":71}]],"length":22445,"saved":false}
{"ts":1352791603076,"patch":[[{"diffs":[[0,"#publish"],[1,"-btn"],[0,"\": \"publ"]],"start1":877,"start2":877,"length1":16,"length2":20}]],"length":22449,"saved":false}
{"ts":1352791606921,"patch":[[{"diffs":[[0,"ction() "],[1,"{\n        }"],[0,"\n    });"]],"start1":988,"start2":988,"length1":16,"length2":27}]],"length":22460,"saved":false}
{"ts":1352791615960,"patch":[[{"diffs":[[0,"();\n    var "],[-1,"MyMappings"],[1,"Publish"],[0,"View = Backb"]],"start1":770,"start2":770,"length1":34,"length2":31}]],"length":22457,"saved":false}
{"ts":1352791620284,"patch":[[{"diffs":[[0,"  /*  @View "],[-1,"MyMappings"],[1,"Publish"],[0,"View\n     *\n"]],"start1":691,"start2":691,"length1":34,"length2":31}]],"length":22454,"saved":false}
{"ts":1352791661045,"patch":[[{"diffs":[[0,"h: function() {\n"],[1,"            this.collection.create({\n                title: title\n            });\n"],[0,"        }\n    })"]],"start1":976,"start2":976,"length1":32,"length2":114}]],"length":22536,"saved":false}
{"ts":1352791730157,"patch":[[{"diffs":[[0,"    });\n"],[1,"    \n    var View = new MyMappingsView({\n        collection: new MappingList\n    });\n\n"],[0,"\n/*  @Vi"]],"start1":1084,"start2":1084,"length1":16,"length2":102}]],"length":22622,"saved":false}
{"ts":1352791732450,"patch":[[{"diffs":[[0,"  });\n\n\n"],[1,"    "],[0,"/*  @Vie"]],"start1":1171,"start2":1171,"length1":16,"length2":20}]],"length":22626,"saved":false}
{"ts":1352791743096,"patch":[[{"diffs":[[0," View = new "],[-1,"MyMappings"],[1,"Publish"],[0,"View({\n     "]],"start1":1104,"start2":1104,"length1":34,"length2":31}]],"length":22623,"saved":false}
{"ts":1352791767221,"patch":[[{"diffs":[[0,"blishView = "],[1,"new ("],[0,"Backbone.Vie"]],"start1":781,"start2":781,"length1":24,"length2":29},{"diffs":[[0,"    }\n    })"],[1,")"],[0,";\n    \n    v"]],"start1":1083,"start2":1083,"length1":24,"length2":25}]],"length":22629,"saved":false}
{"ts":1352791801356,"patch":[[{"diffs":[[0,"blishView = new "],[-1,"("],[0,"Backbone.View.ex"]],"start1":781,"start2":781,"length1":33,"length2":32},{"diffs":[[0,"        }\n    })"],[-1,")"],[0,";\n    \n    var V"]],"start1":1078,"start2":1078,"length1":33,"length2":32}]],"length":22627,"saved":false}
{"ts":1352791806427,"patch":[[{"diffs":[[0,"   \n    var "],[-1,"View"],[1,"Publish"],[0," = new Publi"]],"start1":1097,"start2":1097,"length1":28,"length2":31}]],"length":22630,"saved":false}
{"ts":1352791822025,"patch":[[{"diffs":[[0,"    var "],[-1,"Offering"],[1,"Shop"],[0,"List = B"]],"start1":445,"start2":445,"length1":24,"length2":20}]],"length":22626,"saved":false}
{"ts":1352791832430,"patch":[[{"diffs":[[0,"collection: new "],[-1,"Mapping"],[1,"Shop"],[0,"List\n    });\n\n\n "]],"start1":1141,"start2":1141,"length1":39,"length2":36}]],"length":22623,"saved":false}
{"ts":1352791837476,"patch":[[{"diffs":[[0," model: "],[-1,"Mapping"],[1,"Shop"],[0,",\n      "]],"start1":500,"start2":500,"length1":23,"length2":20}]],"length":22620,"saved":false}
{"ts":1352791841440,"patch":[[{"diffs":[[0,"    var "],[-1,"Offering"],[1,"Shop"],[0," = Backb"]],"start1":172,"start2":172,"length1":24,"length2":20}]],"length":22616,"saved":false}
{"ts":1352791844148,"patch":[[{"diffs":[[0," urlRoot: '/"],[-1,"mapping"],[1,"shop"],[0,"s'\n    });\n\n"]],"start1":246,"start2":246,"length1":31,"length2":28}]],"length":22613,"saved":false}
{"ts":1352791859537,"patch":[[{"diffs":[[0,"var "],[-1,"Offering = app.Offering"],[1,"Shop = app.Shop"],[0,";\n  "]],"start1":99,"start2":99,"length1":31,"length2":23}]],"length":22605,"saved":false}
{"ts":1352791863949,"patch":[[{"diffs":[[0,"@module "],[-1,"Mapping"],[1,"Shop"],[0,"\n *  @ex"]],"start1":7,"start2":7,"length1":23,"length2":20}]],"length":22602,"saved":false}
{"ts":1352791924285,"patch":[[{"diffs":[[0,"    "],[-1,"this.collection.create({\n                title: title"],[1,"var data = PublishForm.getValidData();\n            if (data) {\n                this.collection.create(data);"],[0,"\n   "]],"start1":979,"start2":979,"length1":61,"length2":116},{"diffs":[[0,");\n            }"],[-1,");"],[0,"\n        }\n    }"]],"start1":1089,"start2":1089,"length1":34,"length2":32}]],"length":22655,"saved":false}
{"ts":1352791962876,"patch":[[{"diffs":[[0," url: '/"],[-1,"mapping"],[1,"shop"],[0,"s'\n    }"]],"start1":503,"start2":503,"length1":23,"length2":20}]],"length":22652,"saved":false}
